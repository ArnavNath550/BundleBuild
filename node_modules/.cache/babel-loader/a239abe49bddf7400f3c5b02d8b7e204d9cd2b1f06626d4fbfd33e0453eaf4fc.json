{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/web/BundleBuild/src/components/MissionScroller/ScreenText.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreenText = _ref => {\n  _s();\n  let {\n    screen,\n    setCurrentImg,\n    i\n  } = _ref;\n  const [showAnimation, setShowAnimation] = React.useState(false);\n  const ref = React.useRef(null);\n  const toggleAnimation = e => {\n    var _e$;\n    if ((_e$ = e[0]) !== null && _e$ !== void 0 && _e$.isIntersecting) {\n      setShowAnimation(true);\n      setCurrentImg(i);\n    }\n  };\n  const options = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.5\n  };\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(toggleAnimation, options);\n    if (!showAnimation) {\n      if (ref.current) observer.observe(ref.current);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `screen-text ${showAnimation == true ? 'text-visible' : ''}`,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-heading\",\n      children: screen.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-subheading\",\n      children: screen.subheading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen-cta\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-get-quote\",\n        children: screen.ctaTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ScreenText, \"b06azCnAd+YgyPbyrRo/D2lcMJE=\");\n_c = ScreenText;\nexport default ScreenText;\nvar _c;\n$RefreshReg$(_c, \"ScreenText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ScreenText","_ref","_s","screen","setCurrentImg","i","showAnimation","setShowAnimation","useState","ref","useRef","toggleAnimation","e","_e$","isIntersecting","options","root","rootMargin","threshold","useEffect","observer","IntersectionObserver","current","observe","className","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","subheading","ctaTitle","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/web/BundleBuild/src/components/MissionScroller/ScreenText.js"],"sourcesContent":["import React from 'react'\n\nconst ScreenText = ({screen, setCurrentImg, i}) => {\n    const [showAnimation, setShowAnimation] = React.useState(false);\n    const ref = React.useRef(null);\n    const toggleAnimation = (e) => {\n        if(e[0]?.isIntersecting) {\n            setShowAnimation(true);\n            setCurrentImg(i);\n        }\n    }\n    const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.5,\n    };\n\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(toggleAnimation, options);\n        if(!showAnimation) {\n            if(ref.current) \n            observer.observe(ref.current);\n        }\n    })\n  return (\n    <div className={`screen-text ${showAnimation == true ? 'text-visible': ''}`} ref={ref}>\n        <div className=\"screen-heading\">\n            {screen.heading}\n        </div>\n        <div className=\"screen-subheading\">\n            {screen.subheading}\n        </div>\n        <div className=\"screen-cta\">\n            <button className=\"btn-get-quote\">\n                {screen.ctaTitle}\n            </button>\n        </div>\n    </div>\n  )\n}\n\nexport default ScreenText"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAACC,MAAM;IAAEC,aAAa;IAAEC;EAAC,CAAC,GAAAJ,IAAA;EAC1C,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMC,GAAG,GAAGZ,KAAK,CAACa,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAAA,IAAAC,GAAA;IAC3B,KAAAA,GAAA,GAAGD,CAAC,CAAC,CAAC,CAAC,cAAAC,GAAA,eAAJA,GAAA,CAAMC,cAAc,EAAE;MACrBP,gBAAgB,CAAC,IAAI,CAAC;MACtBH,aAAa,CAACC,CAAC,CAAC;IACpB;EACJ,CAAC;EACD,MAAMU,OAAO,GAAG;IACZC,IAAI,EAAE,IAAI;IACVC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE;EACf,CAAC;EAEDrB,KAAK,CAACsB,SAAS,CAAC,MAAM;IAClB,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAACV,eAAe,EAAEI,OAAO,CAAC;IACnE,IAAG,CAACT,aAAa,EAAE;MACf,IAAGG,GAAG,CAACa,OAAO,EACdF,QAAQ,CAACG,OAAO,CAACd,GAAG,CAACa,OAAO,CAAC;IACjC;EACJ,CAAC,CAAC;EACJ,oBACEvB,OAAA;IAAKyB,SAAS,EAAG,eAAclB,aAAa,IAAI,IAAI,GAAG,cAAc,GAAE,EAAG,EAAE;IAACG,GAAG,EAAEA,GAAI;IAAAgB,QAAA,gBAClF1B,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC1BtB,MAAM,CAACuB;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACN/B,OAAA;MAAKyB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC7BtB,MAAM,CAAC4B;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACN/B,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvB1B,OAAA;QAAQyB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC5BtB,MAAM,CAAC6B;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAA5B,EAAA,CArCKF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAuChB,eAAeA,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}